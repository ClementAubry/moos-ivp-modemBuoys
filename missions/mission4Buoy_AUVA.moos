
ServerHost = localhost // l’adresse du serveur
ServerPort = 9000 // le port de la communauté

Community = AUVA // le nom de la communauté MOOS

ProcessConfig = ANTLER
{
  Run = MOOSDB  @ NewConsole = false
  //Run = uMS @ NewConsole = false
  Run = pLogger @ NewConsole = false
  Run = pShare @ NewConsole = false
  Run = uTimerScript @ NewConsole = false

  Run = iLabjack @ NewConsole = false
  Run = iModem @ NewConsole = false

  Run = uMACView @ NewConsole = false

}

ProcessConfig=pShare
{
  //we can do this one at a time using the route directive
  Input = route=multicast_8
}

ProcessConfig = iModem
{
  AppTick   = 4
  CommsTick = 4
  max_appcast_events = 8

  SERIAL_PORT_NAME = /dev/ttyUSB0
  BAUD_RATE_CONF = 57600
  BAUD_RATE_COMM = 9600

  MODEM_LJ_POWER = FIO0
  MAGNET_LJ_POWER = FIO1

  MODEM_RANGING_TIMEOUT_US = 3000

  ROBOT_NAME = AUVA
}

ProcessConfig = iLabjack
{
  AppTick   = 4
  CommsTick = 4

  max_appcast_events = 20
}

ProcessConfig = uTimerScript                                    
{                                                               
  AppTick   = 4                                                 
  CommsTick = 4 

  // If true script is paused upon launch                       
  //paused         = true                                                              
  // Logic condition that must be met for script to be unpaused 
  condition      = MODEM_MISSION_START = true
  // Seconds added to each event time, on each script pass      
  delay_reset    = 0                                            
  // Seconds added to each event time, on first pass only       
  delay_start    = 0
  // Event(s) are the key components of the script              
  event          = var=MODEM_CONFIGURATION_REQUIRED, val="AUVA=master,AUVB=slave,AUVC=slave,AUVD=slave", time=0//15s config
  event          = var=MODEM_SEND_RNG, val="AUVB=1", time=15 //5s for ranging
  event          = var=MODEM_SEND_RANGE, val="AUVB=1", time=20 // 5s for comm
  event          = var=MODEM_SEND_MESSAGE, val="AUVA=ranging acknowledge", time=25 // 5s for comm 
  event          = var=MODEM_SEND_RNG, val="AUVC=1", time=30 //5s for ranging
  event          = var=MODEM_SEND_RANGE, val="AUVC=1", time=35 // 5s for comm
  event          = var=MODEM_SEND_MESSAGE, val="AUVA=ranging acknowledge", time=40 // 5s for comm 
  event          = var=MODEM_SEND_RNG, val="AUVD=1", time=45 //5s for ranging
  event          = var=MODEM_SEND_RANGE, val="AUVD=1", time=50 // 5s for comm
  event          = var=MODEM_SEND_MESSAGE, val="AUVA=ranging acknowledge", time=55 // 5s for comm 

  event          = var=MODEM_CONFIGURATION_REQUIRED, val="AUVA=slave,AUVB=master,AUVC=slave,AUVD=slave", time=60
  event          = var=MODEM_SEND_RNG, val="AUVA=1", time=75
  event          = var=MODEM_SEND_RANGE, val="AUVA=1", time=80
  event          = var=MODEM_SEND_MESSAGE, val="AUVB=ranging acknowledge", time=85
  event          = var=MODEM_SEND_RNG, val="AUVC=1", time=90
  event          = var=MODEM_SEND_RANGE, val="AUVC=1", time=95
  event          = var=MODEM_SEND_MESSAGE, val="AUVB=ranging acknowledge", time=100
  event          = var=MODEM_SEND_RNG, val="AUVD=1", time=105
  event          = var=MODEM_SEND_RANGE, val="AUVD=1", time=110
  event          = var=MODEM_SEND_MESSAGE, val="AUVA=ranging acknowledge", time=115

  event          = var=MODEM_CONFIGURATION_REQUIRED, val="AUVA=slave,AUVB=slave,AUVC=master,AUVD=slave", time=120
  event          = var=MODEM_SEND_RNG, val="AUVA=1", time=135
  event          = var=MODEM_SEND_RANGE, val="AUVA=1", time=140
  event          = var=MODEM_SEND_MESSAGE, val="AUVC=ranging acknowledge", time=145
  event          = var=MODEM_SEND_RNG, val="AUVB=1", time=150
  event          = var=MODEM_SEND_RANGE, val="AUVB=1", time=155
  event          = var=MODEM_SEND_MESSAGE, val="AUVC=ranging acknowledge", time=160
  event          = var=MODEM_SEND_RNG, val="AUVD=1", time=165
  event          = var=MODEM_SEND_RANGE, val="AUVD=1", time=170
  event          = var=MODEM_SEND_MESSAGE, val="AUVC=ranging acknowledge", time=175

  event          = var=MODEM_CONFIGURATION_REQUIRED, val="AUVA=slave,AUVB=slave,AUVC=slave,AUVD=master", time=180
  event          = var=MODEM_SEND_RNG, val="AUVA=1", time=195
  event          = var=MODEM_SEND_RANGE, val="AUVA=1", time=200
  event          = var=MODEM_SEND_MESSAGE, val="AUVD=ranging acknowledge", time=205
  event          = var=MODEM_SEND_RNG, val="AUVB=1", time=210
  event          = var=MODEM_SEND_RANGE, val="AUVB=1", time=215
  event          = var=MODEM_SEND_MESSAGE, val="AUVD=ranging acknowledge", time=220
  event          = var=MODEM_SEND_RNG, val="AUVC=1", time=225
  event          = var=MODEM_SEND_RANGE, val="AUVC=1", time=230
  event          = var=MODEM_SEND_MESSAGE, val="AUVD=ranging acknowledge", time=235

  // A point when the script is reset                           
  reset_time     = 240     // or {all-posted} or range (0,inf)
  // Maximum number of resets allowed                           
  reset_max      = 50  // or in range [0,inf) 
}
ProcessConfig = pLogger
{
  AppTick   = 4
  CommsTick = 4

  File = MODEM_CONF_TEST

  //SyncLog = false
  //AsyncLog = true

  PATH = ./data

  //LogAuxSrc = true
  WildCardLogging = true
  //WildCardPattern = MODEM_*
  //WildCardOmitPattern = *_ITER_GAP
  //WildCardOmitPattern = *_ITER_LEN
  //WildCardOmitPattern = *_STATUS
  //WildCardOmitPattern = *_DEBUG
}
//------------------------------------------
// uMACView

ProcessConfig = uMACView
{
  AppTick   = 4
  CommsTick = 4
}